# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

ARG PYTHON_VERSION=3.12.4
FROM python:${PYTHON_VERSION}-slim as base

# Prevents Python from writing pyc files.
ENV PYTHONDONTWRITEBYTECODE=1

# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

WORKDIR /app

# Create a non-privileged user that the app will run under.
# See https://docs.docker.com/go/dockerfile-user-best-practices/

# ARG UID=10001
# RUN adduser \
#     --disabled-password \
#     --gecos "" \
#     --home "/nonexistent" \
#     --shell "/sbin/nologin" \
#     --no-create-home \
#     --uid "${UID}" \
#     appuser \
#     && chown -R appuser /app
# chown -R ... was not generated by docker init ..... it was added later

# RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.cache/pip to speed up subsequent builds.
# Leverage a bind mount to requirements.txt to avoid having to copy them into
# into this layer.

RUN apt-get update \
    && apt-get install -y \
    binutils \
    libproj-dev \
    gdal-bin

RUN python -m pip install pipenv
RUN --mount=type=cache,target=/root/.cache/pipenv \
    --mount=type=bind,source=Pipfile,target=Pipfile \
    --mount=type=bind,source=Pipfile.lock,target=Pipfile.lock \
    python -m pipenv install --system

# RUN python -m pip install pipenv
# COPY Pipfile .
# # RUN python -m pipenv lock

# COPY Pipfile.lock .
# # RUN python -m pipenv install --deploy \
# #     pipenv --clear

# RUN pipenv install --deploy \
#     pipenv --clear


# Switch to the non-privileged user to run the application.
# USER appuser

# Copy the source code into the container.
COPY . .
RUN python manage.py collectstatic --noinput

RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
USER appuser


# Expose the port that the application listens on.
EXPOSE 8000

# Run the application.
CMD gunicorn 'likemeapp.wsgi' --bind=0.0.0.0:8000

