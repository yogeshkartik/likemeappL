services:
  likemeappl:
    container_name: likemeappl
    build:
      context: .
      dockerfile: ./Dockerfile
    command: >
      sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn likemeapp.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      # - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      postgres:
        condition: service_healthy
    # depends_on:
    #   - postgres
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        # - action: restart
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://0.0.0.0:80/health/ || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  postgres:
    container_name: postgres
    restart: always
    user: ${DB_USER}
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    # healthcheck:
    #   # test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
    #   # test: [ "CMD", "pg_isready", "-U", "${DB_USER}"]
    #   test: [ "CMD", "pg_isready" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - 1337:80
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - likemeappl
    # depends_on:
    #   likemeappl:
    #     condition: service_healthy
volumes:
  postgres_volume:
  static_volume:
  media_volume:
