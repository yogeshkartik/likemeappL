
services:
  postgres:
    container_name: postgres
    restart: always
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    # healthcheck:
    #   test: [ "CMD", "pg_isready" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  likemeappl:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      - postgres
        # condition: service_healthy

  nginx:
    build:
      context: ./nginx
    ports:
      - 1337:80
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - likemeappl

volumes:
  postgres_volume:
  static_volume:
  media_volume:



# version: '3.8'

# services:
#   postgres:
#     container_name: postgres
#     build:
#       context: ./postgres
#       dockerfile: ./Dockerfile
#     ports:
#       - 5432:5432
#     volumes:
#       - ~/apps/postgres:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_DB=${DB_NAME}

#   likemeappl:
#     build:
#       context: .
#       dockerfile: ./Dockerfile
#     volumes:
#       - .:/app:rw
#       - static_volume:/app/staticfiles
#       - media_volume:/app/media
#     expose:
#       - 8000
#     depends_on:
#       - postgres
#     environment:
#       - DB_NAME=${DB_NAME}
#       - DB_USER=${DB_USER}
#       - DB_PASSWORD=${DB_PASSWORD}
#       - DB_HOST=postgres  # Ensure this matches the service name of the PostgreSQL container
#       - DB_PORT=5432

#   nginx:
#     build:
#       context: ./nginx
#     ports:
#       - 1337:80
#     volumes:
#       - static_volume:/app/staticfiles
#       - media_volume:/app/media
#     depends_on:
#       - likemeappl

# volumes:
#   postgres_data:
#   static_volume:
#   media_volume:




# services:
#   server:
#     build:
#       context: .
#     ports:
#       - 8000:8000
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

